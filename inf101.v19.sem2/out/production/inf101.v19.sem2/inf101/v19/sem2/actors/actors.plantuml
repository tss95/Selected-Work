@startuml

title __ACTORS's Class Diagram__\n

  package inf101.v19.sem2 {
    package inf101.v19.sem2.actors {
      class Computer {
          - name : String
          - hasFired : boolean
          - hasWon : boolean
          - recentlyHit : boolean
          - shotsSinceLastHit : int
          - hasHitPattern : boolean
          - hitPattern : String
          - foundEndOne : boolean
          - hitStreak : int
          - hitsSinceDirectionSwitch : int
          - end_left : boolean
          - end_right : boolean
          - end_upper : boolean
          - end_lower : boolean
          - hasSunkCarrier : boolean
          - hasSunkBattleship : boolean
          - hasSunkCruiser : boolean
          - hasSunkSubmarine : boolean
          - hasSunkDestroyer : boolean
          ~ shotsFired_hits : List<List<Integer>>
          ~ shotsFired_misses : List<List<Integer>>
          ~ pc_ship_coverage : List<List<Integer>>
          + setHitStreak()
          + getHitStreak()
          + setShotsFired_hits()
          + getShotsFired_hits()
          + setShotsFired_misses()
          + getShotsFired_misses()
          + setHasFired()
          + getHasFired()
          + setHasWon()
          + getHasWon()
          + setRecentlyHit()
          + getRecentlyHit()
          + setShotsSinceLastHit()
          + getShotsSinceLastHit()
          + longestShipAlive()
          + sinkShip()
          + sinkByLength()
          + handleDamage()
          + hitOrMiss()
          + init()
          + beginAttackPhase()
          + getShipCoverage()
          + getCurrentShip()
          + getShipNumber()
          + infoHandler()
          + findNextGoodMove()
          + fire()
          + placeShips()
          + status()
      }
    }
  }
  

  package inf101.v19.sem2 {
    package inf101.v19.sem2.actors {
      class Player {
          - hasFired : boolean
          - hasWon : boolean
          - shotsFired_hits : List<List<Integer>>
          - shotsFired_misses : List<List<Integer>>
          - player_ship_coverage : List<List<Integer>>
          + setShotsFired_hits()
          + getShotsFired_hits()
          + setShotsFired_misses()
          + getShotsFired_misses()
          + setHasFired()
          + getHasFired()
          + setHasWon()
          + getHasWon()
          + initiate()
          + beginAttackPhase()
          + handleDamage()
          + getShipCoverage()
      }
    }
  }
  

  Computer -up-|> IPc
  Computer o-- Game : game
  Computer o-- IActor : player
  Player -up-|> IPlayer
  Player o-- Game : game
  Player o-- IPc : pc


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
