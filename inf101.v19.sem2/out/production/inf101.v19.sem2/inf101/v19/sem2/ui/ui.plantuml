@startuml

title __UI's Class Diagram__\n

  package inf101.v19.sem2 {
    package inf101.v19.sem2.ui {
      class GridCellController {
          - gridCell : Rectangle
          - pegWhite : Circle
          - pegRed : Circle
          ~ GridCellController()
          + getGridCellRect()
          + setState()
      }
    }
  }
  

  package inf101.v19.sem2 {
    package inf101.v19.sem2.ui {
      enum GridCellStates {
        PEG_WHITE
        PEG_RED
        CLEAR
      }
    }
  }
  

  package inf101.v19.sem2 {
    package inf101.v19.sem2.ui {
      class Main {
          {static} + main()
          + start()
      }
    }
  }
  

  package inf101.v19.sem2 {
    package inf101.v19.sem2.ui {
      class UI {
          - stage : Stage
          - layerGame : Pane
          - labelStatus : Label
          - layerShips : Group
          - layerGrid : Group
          - layerPegsWhite : Group
          - layerPegsRed : Group
          - button : Button
          - shipRectInteractive : Rectangle
          - gridCellControllers : GridCellController[][]
          - labelP : Label
          - numRows : int
          - numCols : int
          ~ UI()
          + writeStatus()
          - initLayers()
          + getButton()
          + setLabelText()
          - tryInitBoard()
          + init()
          - initBoard()
          - initLabel()
          - initCell()
          - setController()
          - getCellController()
          + setCellState()
          - getCellRect()
          - placeShipRect()
          + setGame()
          - onMouseClick()
          - onMouseEnter()
          - onMouseLeave()
          + placeShipInteractive()
          + placeShipFinal()
          + hideShipInteractive()
          + clearShips()
          - initShipRect()
      }
    }
  }
  

  package inf101.v19.sem2 {
    package inf101.v19.sem2.ui {
      class UIOptions {
          {static} + ROW_LABELS : String[]
          {static} + LABEL_FONT_SIZE : double
          {static} + PEG_SCALE : double
          {static} + PEG_SCALE_HOVER : double
          {static} + SHIP_ROUNDING : double
          {static} + SHIP_INSET : double
          {static} + SHIP_FILL : String
          {static} + SHIP_STROKE : String
      }
    }
  }
  

  Main -up-|> Application
  UI -up-|> IUserInterface
  UI o-- IUIGame : game


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
