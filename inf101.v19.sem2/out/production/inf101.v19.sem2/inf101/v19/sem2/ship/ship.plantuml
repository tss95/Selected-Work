@startuml

title __SHIP's Class Diagram__\n

  package inf101.v19.sem2 {
    package inf101.v19.sem2.ship {
      class Battleship {
          - length : int
          - x0 : int
          - x1 : int
          - y0 : int
          - y1 : int
          - boatDirection : String
          - isDestroyed : boolean
          - initialized : boolean
          - isPlaced : boolean
          - gridCovered : List<List<Integer>>
          + gridCovered()
          + getGridCovered()
          + initShip()
          + setInitialized()
          + getInitialized()
          + setBoatDirection()
          + getBoatDirection()
          + setIsPlaced()
          + isPlaced()
          + getHealth()
          + getShipName()
          + DestroyShip()
          + isDestroyed()
          + getLengthLessOne()
          + getLength()
          + getX0()
          + getX1()
          + getY0()
          + getY1()
          + setX0()
          + setX1()
          + setY0()
          + setY1()
          + rotateShip()
          + iterator()
      }
    }
  }
  

  package inf101.v19.sem2 {
    package inf101.v19.sem2.ship {
      class Carrier {
          - length : int
          - x0 : int
          - x1 : int
          - y0 : int
          - y1 : int
          - boatDirection : String
          - isDestroyed : boolean
          - initialized : boolean
          - isPlaced : boolean
          - gridCovered : List<List<Integer>>
          + gridCovered()
          + getGridCovered()
          + initShip()
          + setInitialized()
          + getInitialized()
          + setBoatDirection()
          + getBoatDirection()
          + setIsPlaced()
          + isPlaced()
          + getHealth()
          + getShipName()
          + DestroyShip()
          + isDestroyed()
          + getLengthLessOne()
          + getLength()
          + getX0()
          + getX1()
          + getY0()
          + getY1()
          + setX0()
          + setX1()
          + setY0()
          + setY1()
          + rotateShip()
          + iterator()
      }
    }
  }
  

  package inf101.v19.sem2 {
    package inf101.v19.sem2.ship {
      class Cruiser {
          - length : int
          - x0 : int
          - x1 : int
          - y0 : int
          - y1 : int
          - boatDirection : String
          - isDestroyed : boolean
          - initialized : boolean
          - isPlaced : boolean
          - gridCovered : List<List<Integer>>
          + gridCovered()
          + getGridCovered()
          + initShip()
          + setInitialized()
          + getInitialized()
          + setBoatDirection()
          + getBoatDirection()
          + setIsPlaced()
          + isPlaced()
          + getHealth()
          + getShipName()
          + DestroyShip()
          + isDestroyed()
          + getLengthLessOne()
          + getLength()
          + getX0()
          + getX1()
          + getY0()
          + getY1()
          + setX0()
          + setX1()
          + setY0()
          + setY1()
          + rotateShip()
          + iterator()
      }
    }
  }
  

  package inf101.v19.sem2 {
    package inf101.v19.sem2.ship {
      class Destroyer {
          - length : int
          - x0 : int
          - x1 : int
          - y0 : int
          - y1 : int
          - boatDirection : String
          - isDestroyed : boolean
          - initialized : boolean
          - isPlaced : boolean
          - gridCovered : List<List<Integer>>
          + gridCovered()
          + getGridCovered()
          + initShip()
          + setInitialized()
          + getInitialized()
          + setBoatDirection()
          + getBoatDirection()
          + setIsPlaced()
          + isPlaced()
          + getHealth()
          + getShipName()
          + DestroyShip()
          + isDestroyed()
          + getLengthLessOne()
          + getLength()
          + getX0()
          + getX1()
          + getY0()
          + getY1()
          + setX0()
          + setX1()
          + setY0()
          + setY1()
          + rotateShip()
          + iterator()
      }
    }
  }
  

  package inf101.v19.sem2 {
    package inf101.v19.sem2.ship {
      class Submarine {
          - length : int
          - x0 : int
          - x1 : int
          - y0 : int
          - y1 : int
          - boatDirection : String
          - isDestroyed : boolean
          - initialized : boolean
          - isPlaced : boolean
          - gridCovered : List<List<Integer>>
          + gridCovered()
          + getGridCovered()
          + initShip()
          + setInitialized()
          + getInitialized()
          + setBoatDirection()
          + getBoatDirection()
          + setIsPlaced()
          + isPlaced()
          + getHealth()
          + getShipName()
          + DestroyShip()
          + isDestroyed()
          + getLengthLessOne()
          + getLength()
          + getX0()
          + getX1()
          + getY0()
          + getY1()
          + setX0()
          + setX1()
          + setY0()
          + setY1()
          + rotateShip()
          + iterator()
      }
    }
  }
  

  Battleship -up-|> IShip
  Battleship o-- Game : game
  Carrier -up-|> IShip
  Carrier o-- Game : game
  Cruiser -up-|> IShip
  Cruiser o-- Game : game
  Destroyer -up-|> IShip
  Destroyer o-- Game : game
  Submarine -up-|> IShip
  Submarine o-- Game : game


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
